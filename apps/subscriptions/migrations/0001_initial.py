# Generated by Django 4.2.4 on 2023-11-05 06:37

from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):
    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="SubscriptionPlan",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "uuid",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        help_text="Unique identifier for the item",
                        unique=True,
                        verbose_name="UUID",
                    ),
                ),
                (
                    "date_created",
                    models.DateTimeField(
                        auto_now_add=True,
                        help_text="Server date and time when the item was created modified",
                        verbose_name="Date created",
                    ),
                ),
                (
                    "date_modified",
                    models.DateTimeField(
                        auto_now=True,
                        help_text="Server date and time when the item was last modified",
                        verbose_name="Date modified",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        help_text="Name of the subscription plan",
                        max_length=120,
                        verbose_name="Name",
                    ),
                ),
                (
                    "description",
                    models.TextField(
                        help_text="Short description of the subscription plan",
                        max_length=1000,
                        verbose_name="Description",
                    ),
                ),
                (
                    "stripe_product_id",
                    models.CharField(
                        blank=True,
                        help_text='Stripe product API ID (e.g. "prod_1KVqZYGH7I")',
                        max_length=255,
                        null=True,
                        verbose_name="Stripe product ID",
                    ),
                ),
                (
                    "is_plan_showcased",
                    models.BooleanField(
                        default=False,
                        help_text="If true, this subscription plan is showcased on the pricing                                            page",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="If true, this plan is available for purchase",
                    ),
                ),
                (
                    "json_data",
                    models.JSONField(
                        blank=True,
                        default=dict,
                        help_text="JSON data",
                        null=True,
                        verbose_name="JSON data",
                    ),
                ),
            ],
            options={
                "verbose_name": ("Subscription plan",),
                "verbose_name_plural": ("Subscription plans",),
                "ordering": ("name",),
            },
        ),
        migrations.CreateModel(
            name="SubscriptionTerm",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "uuid",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        help_text="Unique identifier for the item",
                        unique=True,
                        verbose_name="UUID",
                    ),
                ),
                (
                    "date_created",
                    models.DateTimeField(
                        auto_now_add=True,
                        help_text="Server date and time when the item was created modified",
                        verbose_name="Date created",
                    ),
                ),
                (
                    "date_modified",
                    models.DateTimeField(
                        auto_now=True,
                        help_text="Server date and time when the item was last modified",
                        verbose_name="Date modified",
                    ),
                ),
                (
                    "price_cents",
                    models.IntegerField(
                        blank=True,
                        help_text="Price in cents (e.g. 1000 = $10.00)",
                        null=True,
                        verbose_name="Price cents",
                    ),
                ),
                (
                    "stripe_price_id",
                    models.CharField(
                        blank=True,
                        help_text='Stripe price API ID (e.g. "price_1KVqZYGH7IAkWYyXOExqnpAw")',
                        max_length=255,
                        null=True,
                        verbose_name="Stripe price ID",
                    ),
                ),
                (
                    "interval",
                    models.CharField(
                        choices=[("monthly", "Monthly"), ("annual", "Annual")],
                        default="monthly",
                        help_text="Billing interval for this term",
                        max_length=10,
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="If true, this subscription term is available for purchase",
                    ),
                ),
                (
                    "subscription_plan",
                    models.ForeignKey(
                        help_text="Subscription plan that this term belongs to",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="subscription_terms",
                        to="subscriptions.subscriptionplan",
                        verbose_name="Subscription plan",
                    ),
                ),
            ],
            options={
                "verbose_name": ("Subscription term",),
                "verbose_name_plural": ("Subscription terms",),
                "ordering": ("pk",),
            },
        ),
    ]
